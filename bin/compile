#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}


# config
AWS_CLI_URL="https://s3.amazonaws.com/aws-cli/awscli-bundle.zip"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

function export_env_dir() {
  echo "-----> Exporting Vars"

  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$ENV_DIR" ]; then
    for e in $(ls $ENV_DIR); do
      echo "-----> Exporting $e"
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $ENV_DIR/$e)"
      :
    done
  fi
}

export_env_dir


BUILDPACK_DIR="$(dirname $(dirname $0))"
INSTALL_DIR="/app/.awscli"

echo "-----> Installing AWS CLI"
curl --silent --show-error -o /tmp/awscli-bundle.zip "$AWS_CLI_URL" |& indent
unzip -qq -d "$BUILD_DIR/.awscli" /tmp/awscli-bundle.zip |& indent

# Since build-dir isn't guaranteed to be /app, move whatever's in /app's awscli
# dir out of the way. The installer uses virtualenv, which means it must be
# installed in the final location - we have to install into /app.
rm -rf /tmp/awscli

# Since $BUILD_DIR can be /app, we can only move $INSTALL_DIR if it's not the same.
if [ "$INSTALL_DIR" != "$BUILD_DIR/.awscli" ] && [ -e $INSTALL_DIR ]; then
  mv $INSTALL_DIR /tmp/awscli
fi

"$BUILD_DIR/.awscli/awscli-bundle/install" -i "$INSTALL_DIR" |& indent

if [ "$INSTALL_DIR" != "$BUILD_DIR/.awscli" ]; then
  mv $INSTALL_DIR/* "$BUILD_DIR/.awscli"
fi

# Restore the moved awscli dir, if it exists.
[ -e /tmp/awscli ] && mv /tmp/awscli $INSTALL_DIR

mkdir -p $BUILD_DIR/.profile.d
cat > "$BUILD_DIR/.profile.d/awscli.sh" <<'PROFILE'
export PATH="$HOME/.awscli/bin:$PATH"
PROFILE

ls /app

"$INSTALL_DIR/.awscli/bin/aws --version"





#cleaning up...
rm -rf /tmp/awscli*
